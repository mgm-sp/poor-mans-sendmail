#!/usr/bin/env ruby
require "pp"

if "DEBUG" != "DEBUG"
	class TCPSocket
		def TCPSocket::open(server, port)
			puts "openssl s_client -starttls smtp -servername #{server} -connect #{server}:#{port}"
			TCPSocket.new
		end
		def gets
			"250 OK"
		end
		def puts s
		end
		def close
		end
	end
else
	require 'socket'
end
class SMTP
	def initialize(server)
		@server = server
		@s = TCPSocket.open(@server, 25)
		puts @s.gets # print banner
		if send_wait("HELO alcatraz.mgm-sp.team")[0] != 250
			raise "Server does not accept HELO"
		end
	end

	def send_wait(cmd)
		send(cmd)
		result = @s.gets
		puts result
		ret = result.scan(/^(\d\d\d)(.*)$/).flatten
		ret[0] = ret[0].to_i
		ret
	end
	def send(cmd)
		puts cmd
		@s.puts("#{cmd}\r\n")
	end
	def close
		@s.close
	end
	def renew
		@s.close
		initialize(@server)
	end
end

if ARGV[0]
	server = ARGV[0]
else
	YELLOW="\033[33m"
	NORMAL="\033[0m"
	puts <<~USAGE
		Usage: #{File.basename($0)} <server> [<mail_from> [<rcpt_to> [mailfile]]]
		Ex.:
		#{YELLOW}1. Check if Mail works (+IP reverse lookup, + IP Blacklist)#{NORMAL}
		   #{File.basename($0)} <server> ben@alcatraz.mgm-sp.team someone@server valid.eml
		#{YELLOW}2. Check for open relay#{NORMAL}
		   #{File.basename($0)} <server> ben@alcatraz.mgm-sp.team benjamin.kellermann@mgm-sp.com valid.eml
		#{YELLOW}3. Check if spf is configured correctly:#{NORMAL}
		   #{File.basename($0)} <server> someone@gmx.de someone@server valid.eml
		#{YELLOW}4. Check if From-Address can be bullshit#{NORMAL}
		   #{File.basename($0)} <server> ben@alcatraz.mgm-sp.team someone@server invalid-from.eml
		#{YELLOW}5. Check if DMARC is checked#{NORMAL}
		   #{File.basename($0)} <server> ben@alcatraz.mgm-sp.team someone@server dmarc-reject.eml
		#{YELLOW}6. Check if DKIM is checked#{NORMAL}
		   #{File.basename($0)} <server> ben@alcatraz.mgm-sp.team someone@server dkim-reject.eml
	USAGE
	exit
end
s = SMTP.new(server)



exit unless ARGV[1]
exit if (s.send_wait("MAIL FROM: #{ARGV[1]}")[0] >= 400)
exit unless ARGV[2]
exit if (s.send_wait("RCPT TO: #{ARGV[2]}")[0] >=400)
exit unless ARGV[3]
exit if (s.send_wait("data")[0] >=400)
File.open(ARGV[3]).each{|line|
	s.send(line.chomp)
}
s.send_wait(".")
s.send_wait("QUIT")
s.close
